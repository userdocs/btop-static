name: 01 - cross build and release

on:
  - workflow_dispatch

permissions:
  actions: write
  id-token: write
  contents: write
  attestations: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [btop]
        os_id: [alpine]
        os_version_id: [edge]
        arch_type:
          [
            aarch64-linux-musl,
            arm-linux-musleabi,
            arm-linux-musleabihf,
            armv6-linux-musleabihf,
            armv7l-linux-musleabihf,
            i686-linux-musl,
            x86_64-linux-musl,
            mips-linux-musl,
            mipsel-linux-musl,
            mips64-linux-musl,
            mips64el-linux-musl,
            powerpc-linux-musl,
            powerpc64le-linux-musl,
            s390x-linux-musl,
            riscv64-linux-musl,
            loongarch64-linux-musl,
          ]

    name: ${{ matrix.name }} ${{ matrix.arch_type }}

    env:
      prerelease: false
      XZ_OPT: "-9T0"
      container_name: cross_builder

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Create docker ${{ env.container_name }} ${{ matrix.arch }} container
        uses: userdocs/actions/qbt_docker@e8f57bd585c7bb6dcce011694d6772bab657abca # v1.0.7
        with:
            os_id: ghcr.io/userdocs/musl-cross-make
            os_version_id: ${{ matrix.arch_type }}
            additional_apps: >
              autoconf automake bash build-base coreutils curl findutils git libarchive-tools libtool linux-headers ncurses-dev patch pkgconf xz zip
            custom_docker_commands: |
              -e CPPFLAGS=-I/usr/include/fortify -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3
              -e LDFLAGS=-static --static -Wl,-O1,--as-needed,--sort-common,-z,nodlopen,-z,noexecstack,-z,now,-z,relro,-z,--no-copy-dt-needed-entries,--build-id

      - name: Docker - Git clone btop
        run: docker exec -w "${wd}" "${container_name}" git clone --single-branch --branch "main" --shallow-submodules --recurse-submodules --depth 1 https://github.com/aristocratos/btop.git btop

      - name: Docker - build ${{ matrix.arch_type }} toolchain
        run: docker exec -w "${wd}/btop" "${container_name}" make STATIC=true STRIP=true ARCH=${{ matrix.arch_type }} -j"$(nproc)" arch_type=${{ matrix.arch_type }} CC=${{ matrix.arch_type }}-gcc AR=${{ matrix.arch_type }}-ar CXX=${{ matrix.arch_type }}-g++

      - name: Docker - install ${{ matrix.arch_type }} toolchain
        run: docker exec -w "${wd}/btop" "${container_name}" make install PREFIX="${wd}/btop-completed"

      - name: Docker - archive ${{ matrix.arch_type }} toolchain
        run: docker exec -w "${wd}/btop-completed" "${container_name}" sh -c 'tar -cJf ../${{ matrix.arch_type }}.tar.xz *'

      - name: Host - Set btop version
        run: echo "btop_version=$(curl -sL https://raw.githubusercontent.com/aristocratos/btop/main/src/btop.cpp | sed -rn 's|(.*)const string Version = "(.*)";|\2|p')" >> $GITHUB_ENV

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: |
            btop-completed/bin/btop
            ${{ matrix.arch_type }}.tar.xz

      - name: Create release - tag - assets
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          prerelease: false
          artifacts: "${{ matrix.arch_type }}.tar.xz"
          replacesArtifacts: true
          tag: "v${{ env.btop_version }}"
          name: "btop ${{ env.btop_version }} "
          body: "btop ${{ env.btop_version }} built using https://github.com/userdocs/musl-cross-make"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
